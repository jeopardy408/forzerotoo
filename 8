data1 = read.table("MOM_data_full.txt", header=TRUE)

b = -1
c = 0.05
d = 2

#1
rdeac.1 = function(xa.mass, b=b, c=c, d=d, sig2=0.63, xmin=1.8, xmax=10^15){
  z = rnorm(n=1, mean = 0, sd = sqrt(sig2))
	if (log(xa.mass) <= d){
		xd = exp(log(xa.mass)+z+(c-b*d)+(b*log(xa.mass)))
	}
	else{
		xd = exp(log(xa.mass)+z+c)
	}
	if (xd >= xmin && xd <= xmax){
		return(xd)
	}
	else{
		return(rdeac.1(xa.mass, b, c, d, sig2, xmin, xmax))
	}
}


rdeac.1(40, b, c, d, 0.63, 1.8, 10^15)
rdeac.1(40, b, c, d, 0.63, 35, 45)

xa.100 = c(1:100)
xd.100 = sapply(xa.100, rdeac.1, b=b, c=c, d=d, sig2 = 0.63, xmin=1.8, xmax=10^15)
xd.100 = as.vector(xd.100)

my.start <- c(b=b, c=c, d=d)

fit.a.deac <- function(data,start=my.start) {
	sse <- function(par) {
		preds <- sapply(data, rdeac.1,b=par[1],c=par[2],d=par[3], 
			sig2=0.63, xmin=1.8, xmax=10^15)
		sum((xd.100 - preds)^2)
	}
	fit <- optim(par=start,fn=sse,method="Nelder-Mead")
	coefficients <- fit$par
	fitted <- sapply(data, rdeac.1, b=coefficients[1], c=coefficients[2],
		d=coefficients[3], sig2=0.63, xmin=1.8, xmax=10^15)
	residuals <- xd.100 - fitted
	mse <- mean(residuals^2)
	return(list(coefficients=coefficients,fitted=fitted,residuals=residuals,
		mse=mse,data=data))
}

xd.sim.100 = fit.a.deac(xa.100)

#2
rdeac = function(n, xa.mass, b=b, c=c, d=d, sig2=0.63, xmin=1.8, xmax=10^15){
	final.vect = rep(NA, n)
	for (i in 1:n){
		final.vect[i] = rdeac.1(xa.mass, b=b, c=c, d=d, sig2=0.63, xmin=1.8, xmax=10^15)
	}
	return(final.vect)
}

rdeac(n=2, xa.mass = 40, b=b, c=c, d=d, sig2=0.63, xmin=1.8, xmax=10^15)

rdeac.1.mult = function(length, xa.mass, b=b, c=c, d=d, sig2=0.63, xmin=1.8, xmax=10^15){
	df = data.frame(xd = numeric(length))
	for (i in 1:length){
		df[i,] = rdeac.1(xa.mass, b=b, c=c, d=d, sig2=0.63, xmin=1.8, xmax=10^15)
	}
	return(df)
}

rdeac.mult = function(length, n, xa.mass, b=b, c=c, d=d, sig2=0.63, xmin=1.8, xmax=10^15){
	mat = matrix(nrow = length, ncol = n)
	for (i in 1:length){
		mat[i,] = rdeac(n = n, xa.mass = xa.mass, b=b, c=c, d=d, sig2=0.63, xmin=1.8, xmax=10^15)
	}
	return(mat)
}

rdeac.1.500 = rdeac.1.mult(length = 500, xa.mass = 40, b=b, c=c, d=d, sig2=0.63, xmin=1.8, xmax=10^15)
rdeac.mult.500 = rdeac.mult(length = 500, n=2, xa.mass = 40, b=b, c=c, d=d, sig2=0.63, xmin=1.8, xmax=10^15)



